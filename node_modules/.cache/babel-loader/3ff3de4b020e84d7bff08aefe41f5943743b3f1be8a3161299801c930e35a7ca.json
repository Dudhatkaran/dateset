{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\OneDrive\\\\Desktop\\\\country\\\\countrydata\\\\data\\\\src\\\\component\\\\datas\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      return response.json();\n    }).then(data => {\n      setUsers(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.name\n      }, country.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Data, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Data","_s","countries","setCountries","fetch","then","response","json","data","setUsers","children","map","country","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/karan/OneDrive/Desktop/country/countrydata/data/src/component/datas/Data.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Data = () => {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                setUsers(data)\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                { countries.map(country => (\r\n                    <p key={ country.id }>{ country.name }</p>\r\n                )) }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Data"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAI;MACd,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACVC,QAAQ,CAACD,IAAI,CAAC;IAClB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA;MAAAa,QAAA,EACMR,SAAS,CAACS,GAAG,CAACC,OAAO,iBACnBf,OAAA;QAAAa,QAAA,EAAwBE,OAAO,CAACC;MAAI,GAA3BD,OAAO,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAvBKD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAyBV,eAAeA,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}