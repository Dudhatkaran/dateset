{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\OneDrive\\\\Desktop\\\\country\\\\countrydata\\\\data\\\\src\\\\component\\\\datas\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Data.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  // const [data, setData] = useState([]);\n  // const [name, setName] = useState(\"\");\n  // const [username, setUsername] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [userId, setuserId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //         .then(response => {\n  //             return response.json()\n  //         })\n  //         .then(data => {\n  //             setData(data)\n  //             setName(data[0].name)\n  //             setUsername(data[0].username)\n  //             setEmail(data[0].email)\n  //             setuserId(data[0].id)\n  //         })\n  // }, []);\n\n  // function deleteUser(id) {\n  //     fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n  //         method: \"DELETE\"\n  //     }).then((response) => {\n  //         response.json()\n  //             .then((response) => {\n  //                 console.log(response);\n  //             })\n  //     })\n  // }\n\n  // function seleteUser(id) {\n  //     let item = data[id - 1];\n  //     setName(item.name);\n  //     setUsername(item.username);\n  //     setEmail(item.email);\n  //     setuserId(item.id);\n  // }\n\n  // function updateUser() {\n  //     let item = { name, username, email }\n  //     // console.log('item::: ', item);\n  //     fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\n  //         method: \"PUT\",\n  //         headers: {\n  //             'Accept': 'application/json',\n  //             'Content-type': 'application/json',\n  //         },\n  //         body: JSON.stringify(item)\n  //     }).then((response) => {\n  //         response.json()\n  //             .then((response) => {\n  //                 console.log(response);\n  //             })\n  //     })\n  // }\n\n  const [inputdata, setInputData] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const addItem = () => {\n    if (!inputdata) {} else {\n      setItems([...items, inputdata]);\n      setInputData('');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <>\n    //     <table border=\"1\">\n    //         <tr>\n    //             <td>id</td>\n    //             <td>name</td>\n    //             <td>username</td>\n    //             <td>email</td>\n    //         </tr>\n    //         {\n    //             data.map((item) =>\n    //                 <tr>\n    //                     <td>{ item.id }</td>\n    //                     <td>{ item.name }</td>\n    //                     <td>{ item.username }</td>\n    //                     <td>{ item.email }</td>\n    //                     <td><button onClick={ () => seleteUser(item.id) }>update</button></td>\n    //                     <td><button onClick={ () => deleteUser(item.id) }>delete</button></td>\n    //                 </tr>\n    //             )\n    //         }\n    //     </table>\n    //     <div>\n    //         <input type=\"text\" value={ name } onChange={ (e) => { setName(e.target.value) } } /> <br />\n    //         <input type=\"text\" value={ username } onChange={ (e) => { setUsername(e.target.value) } } /> <br />\n    //         <input type=\"text\" value={ email } onChange={ (e) => { setEmail(e.target.value) } } /> <br />\n    //         <button onClick={ updateUser }>update user</button>\n    //     </div>\n    // </>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputdata,\n          onChange: e => setInputData(e.target.value),\n          placeholder: \"Enter a new todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addItem,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map((ele, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? 'completed' : '',\n              onClick: () => handleToggleComplete(todo.id),\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveTodo(todo.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(Data, \"HK2b4w2MyQn4WUXbZKu+Mk+sYS8=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Data","_s","inputdata","setInputData","items","setItems","addItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","ele","index","todo","completed","handleToggleComplete","id","text","handleRemoveTodo","_c","$RefreshReg$"],"sources":["C:/Users/karan/OneDrive/Desktop/country/countrydata/data/src/component/datas/Data.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Data.css\";\r\n\r\nconst Data = () => {\r\n\r\n    // const [data, setData] = useState([]);\r\n    // const [name, setName] = useState(\"\");\r\n    // const [username, setUsername] = useState(\"\");\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [userId, setuserId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    //         .then(response => {\r\n    //             return response.json()\r\n    //         })\r\n    //         .then(data => {\r\n    //             setData(data)\r\n    //             setName(data[0].name)\r\n    //             setUsername(data[0].username)\r\n    //             setEmail(data[0].email)\r\n    //             setuserId(data[0].id)\r\n    //         })\r\n    // }, []);\r\n\r\n    // function deleteUser(id) {\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n    //         method: \"DELETE\"\r\n    //     }).then((response) => {\r\n    //         response.json()\r\n    //             .then((response) => {\r\n    //                 console.log(response);\r\n    //             })\r\n    //     })\r\n    // }\r\n\r\n    // function seleteUser(id) {\r\n    //     let item = data[id - 1];\r\n    //     setName(item.name);\r\n    //     setUsername(item.username);\r\n    //     setEmail(item.email);\r\n    //     setuserId(item.id);\r\n    // }\r\n\r\n    // function updateUser() {\r\n    //     let item = { name, username, email }\r\n    //     // console.log('item::: ', item);\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\r\n    //         method: \"PUT\",\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify(item)\r\n    //     }).then((response) => {\r\n    //         response.json()\r\n    //             .then((response) => {\r\n    //                 console.log(response);\r\n    //             })\r\n    //     })\r\n    // }\r\n\r\n    const [inputdata, setInputData] = useState(\"\")\r\n    const [items, setItems] = useState([]);\r\n\r\n    const addItem = () => {\r\n        if (!inputdata) {\r\n\r\n        } else {\r\n            setItems([...items, inputdata])\r\n            setInputData('')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <>\r\n        //     <table border=\"1\">\r\n        //         <tr>\r\n        //             <td>id</td>\r\n        //             <td>name</td>\r\n        //             <td>username</td>\r\n        //             <td>email</td>\r\n        //         </tr>\r\n        //         {\r\n        //             data.map((item) =>\r\n        //                 <tr>\r\n        //                     <td>{ item.id }</td>\r\n        //                     <td>{ item.name }</td>\r\n        //                     <td>{ item.username }</td>\r\n        //                     <td>{ item.email }</td>\r\n        //                     <td><button onClick={ () => seleteUser(item.id) }>update</button></td>\r\n        //                     <td><button onClick={ () => deleteUser(item.id) }>delete</button></td>\r\n        //                 </tr>\r\n        //             )\r\n        //         }\r\n        //     </table>\r\n\r\n        //     <div>\r\n        //         <input type=\"text\" value={ name } onChange={ (e) => { setName(e.target.value) } } /> <br />\r\n        //         <input type=\"text\" value={ username } onChange={ (e) => { setUsername(e.target.value) } } /> <br />\r\n        //         <input type=\"text\" value={ email } onChange={ (e) => { setEmail(e.target.value) } } /> <br />\r\n        //         <button onClick={ updateUser }>update user</button>\r\n        //     </div>\r\n        // </>\r\n\r\n        <>\r\n            <div className=\"todo-list\">\r\n                <h2>Todo List</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputdata }\r\n                    onChange={ (e) => setInputData(e.target.value) }\r\n                    placeholder=\"Enter a new todo\"\r\n                />\r\n                <button onClick={ addItem }>Add</button>\r\n\r\n                <ul>\r\n                    { items.map((ele, index) => (\r\n                        <li key={ todo.id }>\r\n                            <span\r\n                                className={ todo.completed ? 'completed' : '' }\r\n                                onClick={ () => handleToggleComplete(todo.id) }\r\n                            >\r\n                                { todo.text }\r\n                            </span>\r\n                            <button onClick={ () => handleRemoveTodo(todo.id) }>Remove</button>\r\n                        </li>\r\n                    ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Data"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}