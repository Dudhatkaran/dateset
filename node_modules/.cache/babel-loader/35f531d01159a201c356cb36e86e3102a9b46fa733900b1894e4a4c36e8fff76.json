{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\OneDrive\\\\Desktop\\\\country\\\\data\\\\src\\\\component\\\\TableData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableData = () => {\n  _s();\n  const data = [{\n    \"country\": \"Afghanistan\",\n    \"states\": [\"Badakhshan\", \"Badghis\", \"Baghlan\", \"Balkh\", \"Bamian\", \"Daykondi\", \"Farah\", \"Faryab\", \"Ghazni\", \"Ghowr\"]\n  }, {\n    \"country\": \"Bangladesh\",\n    \"states\": [\"Barisal\", \"Chittagong\", \"Dhaka\", \"Khulna\", \"Rajshahi\", \"Sylhet\", \"Barisal Division\", \"Dhaka Division\", \"Sylhet Division\", \"Khulna Division\"]\n  }, {\n    \"country\": \"Brazil\",\n    \"states\": [\"Acre\", \"Alagoas\", \"Amapa\", \"Amazonas\", \"Bahia\", \"Ceara\", \"Distrito Federal\", \"Espirito Santo\", \"Goias\", \"Maranhao\"]\n  }, {\n    \"country\": \"Canada\",\n    \"states\": [\"Alberta\", \"British Columbia\", \"Manitoba\", \"New Brunswick\", \"Newfoundland and Labrador\", \"Northwest Territories\", \"Nova Scotia\", \"Nunavut\"]\n  }, {\n    \"country\": \"China\",\n    \"states\": [\"Anhui\", \"Fujian\", \"Gansu\", \"Guangdong\", \"Guizhou\", \"Hainan\", \"Hebei\", \"Heilongjiang\", \"Henan\", \"Hubei\"]\n  }, {\n    \"country\": \"India\",\n    \"states\": [\"Assam\", \"Bihar\", \"Daman and Diu\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Karnataka\", \"Punjab\", \"Rajasthan\"]\n  }, {\n    \"country\": \"Nepal\",\n    \"states\": [\"Bagmati\", \"Bheri\", \"Dhawalagiri\", \"Gandaki\", \"Janakpur\", \"Karnali\", \"Kosi\", \"Lumbini\", \"Mahakali\", \"Mechi\"]\n  }, {\n    \"country\": \"New Zealand\",\n    \"states\": [\"Auckland\", \"Bay of Plenty\", \"Canterbury\", \"Chatham Islands\", \"Gisborne\", \"Hawke's Bay\", \"Manawatu-Wanganui\", \"Marlborough\", \"Nelson\", \"Northland\"]\n  }, {\n    \"country\": \"Russia\",\n    \"states\": [\"Amur\", \"Arkhangel'sk\", \"Astrakhan'\", \"Belgorod\", \"Bryansk\", \"Chelyabinsk\", \"Chita\", \"Irkutsk\", \"Ivanovo\", \"Kaliningrad\"]\n  }, {\n    \"country\": \"Pakistan\",\n    \"states\": [\"Balochistan\", \"North-West Frontier Province\", \"Punjab\", \"Sindh\", \"Islamabad Capital Territory\", \"Federally Administered Tribal Areas\"]\n  }];\n  // const city = [{ stste: \"Gujarat\", city: [\"surat\", \"bhavnagar\", \"amreli\", \"rajkot\",] }, { state: \"Rajasthan\", city: [] }]\n  // const [stateData, setStateData] = useState([]);\n\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const handleCountryClick = country => {\n    setSelectedCountry(country);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Satate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleCountryClick(item.states),\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)), selectedCountry.map((state, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: state\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TableData, \"vsumXaDwpwlPxPUwUcer1m4Im8Y=\");\n_c = TableData;\nexport default TableData;\nvar _c;\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TableData","_s","data","selectedCountry","setSelectedCountry","handleCountryClick","country","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","states","state","_c","$RefreshReg$"],"sources":["C:/Users/karan/OneDrive/Desktop/country/data/src/component/TableData.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TableData = () => {\r\n\r\n    const data =\r\n        [\r\n            {\r\n                \"country\": \"Afghanistan\",\r\n                \"states\": [\"Badakhshan\", \"Badghis\", \"Baghlan\", \"Balkh\", \"Bamian\", \"Daykondi\", \"Farah\", \"Faryab\", \"Ghazni\", \"Ghowr\"]\r\n            },\r\n            {\r\n                \"country\": \"Bangladesh\",\r\n                \"states\": [\"Barisal\", \"Chittagong\", \"Dhaka\", \"Khulna\", \"Rajshahi\", \"Sylhet\", \"Barisal Division\", \"Dhaka Division\", \"Sylhet Division\", \"Khulna Division\"]\r\n            },\r\n            {\r\n                \"country\": \"Brazil\",\r\n                \"states\": [\"Acre\", \"Alagoas\", \"Amapa\", \"Amazonas\", \"Bahia\", \"Ceara\", \"Distrito Federal\", \"Espirito Santo\", \"Goias\", \"Maranhao\"]\r\n            },\r\n            {\r\n                \"country\": \"Canada\",\r\n                \"states\": [\"Alberta\", \"British Columbia\", \"Manitoba\", \"New Brunswick\", \"Newfoundland and Labrador\", \"Northwest Territories\", \"Nova Scotia\", \"Nunavut\"]\r\n            },\r\n            {\r\n                \"country\": \"China\",\r\n                \"states\": [\"Anhui\", \"Fujian\", \"Gansu\", \"Guangdong\", \"Guizhou\", \"Hainan\", \"Hebei\", \"Heilongjiang\", \"Henan\", \"Hubei\"]\r\n            },\r\n            {\r\n                \"country\": \"India\",\r\n                \"states\": [\"Assam\", \"Bihar\", \"Daman and Diu\", \"Delhi\", \"Goa\", \"Gujarat\", \"Haryana\", \"Karnataka\", \"Punjab\", \"Rajasthan\"]\r\n            },\r\n            {\r\n                \"country\": \"Nepal\",\r\n                \"states\": [\"Bagmati\", \"Bheri\", \"Dhawalagiri\", \"Gandaki\", \"Janakpur\", \"Karnali\", \"Kosi\", \"Lumbini\", \"Mahakali\", \"Mechi\"]\r\n            },\r\n            {\r\n                \"country\": \"New Zealand\",\r\n                \"states\": [\"Auckland\", \"Bay of Plenty\", \"Canterbury\", \"Chatham Islands\", \"Gisborne\", \"Hawke's Bay\", \"Manawatu-Wanganui\", \"Marlborough\", \"Nelson\", \"Northland\"]\r\n            },\r\n            {\r\n                \"country\": \"Russia\",\r\n                \"states\": [\"Amur\", \"Arkhangel'sk\", \"Astrakhan'\", \"Belgorod\", \"Bryansk\", \"Chelyabinsk\", \"Chita\", \"Irkutsk\", \"Ivanovo\", \"Kaliningrad\"]\r\n            },\r\n            {\r\n                \"country\": \"Pakistan\",\r\n                \"states\": [\"Balochistan\", \"North-West Frontier Province\", \"Punjab\", \"Sindh\", \"Islamabad Capital Territory\", \"Federally Administered Tribal Areas\"]\r\n            },\r\n        ]\r\n    // const city = [{ stste: \"Gujarat\", city: [\"surat\", \"bhavnagar\", \"amreli\", \"rajkot\",] }, { state: \"Rajasthan\", city: [] }]\r\n    // const [stateData, setStateData] = useState([]);\r\n\r\n    const [selectedCountry, setSelectedCountry] = useState([]);\r\n\r\n    const handleCountryClick = (country) => {\r\n        setSelectedCountry(country);\r\n    };\r\n    return (\r\n        <>\r\n            <div style={ { display: 'flex' } }>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Country</th>\r\n                            <th>Satate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { data.map((item, index) => (\r\n                            <tr key={ index } onClick={ () => handleCountryClick(item.states) }>\r\n                                <td>{ item.country }</td>\r\n                            </tr>\r\n                        )) }\r\n                        { selectedCountry.map((state, index) => (\r\n                            <tr>\r\n                                <td key={ index }>{ state }</td>\r\n                            </tr>\r\n                        )) }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableData"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}