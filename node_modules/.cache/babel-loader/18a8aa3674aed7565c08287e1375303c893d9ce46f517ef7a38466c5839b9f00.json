{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\OneDrive\\\\Desktop\\\\country\\\\countrydata\\\\data\\\\src\\\\component\\\\datas\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Data.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getlocalitems = () => {\n  let list = localStorage.getItem('lists');\n  console.log('list::: ', list);\n  if (list) {\n    return JSON.parse(localStorage.getItem('lists'));\n  } else {\n    return [];\n  }\n};\nconst Data = () => {\n  _s();\n  // const [data, setData] = useState([]);\n  // const [name, setName] = useState(\"\");\n  // const [username, setUsername] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [userId, setuserId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //         .then(response => {\n  //             return response.json()\n  //         })\n  //         .then(data => {\n  //             setData(data)\n  //             setName(data[0].name)\n  //             setUsername(data[0].username)\n  //             setEmail(data[0].email)\n  //             setuserId(data[0].id)\n  //         })\n  // }, []);\n\n  // function deleteUser(id) {\n  //     fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n  //         method: \"DELETE\"\n  //     }).then((response) => {\n  //         response.json()\n  //             .then((response) => {\n  //                 console.log(response);\n  //             })\n  //     })\n  // }\n\n  // function seleteUser(id) {\n  //     let item = data[id - 1];\n  //     setName(item.name);\n  //     setUsername(item.username);\n  //     setEmail(item.email);\n  //     setuserId(item.id);\n  // }\n\n  // function updateUser() {\n  //     let item = { name, username, email }\n  //     // console.log('item::: ', item);\n  //     fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\n  //         method: \"PUT\",\n  //         headers: {\n  //             'Accept': 'application/json',\n  //             'Content-type': 'application/json',\n  //         },\n  //         body: JSON.stringify(item)\n  //     }).then((response) => {\n  //         response.json()\n  //             .then((response) => {\n  //                 console.log(response);\n  //             })\n  //     })\n  // }\n\n  const [inputdata, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getlocalitems());\n  const [togglesubmit, setTogglesubmit] = useState(true);\n  const [isEdititem, setIsEdititem] = useState(null);\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"please fill the data\");\n    } else if (inputdata && !togglesubmit) {\n      setItems(items.map(ele => {\n        if (ele.id === isEdititem) {\n          return {\n            ...ele,\n            name: inputdata\n          };\n        }\n        return ele;\n      }));\n      setTogglesubmit(true);\n      setInputData(\"\");\n      setIsEdititem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n  const deleteItem = index => {\n    const updateditems = items.filter(ele => {\n      return index != ele.id;\n    });\n    setItems(updateditems);\n  };\n  const editItem = id => {\n    let newEditItem = items.find(ele => {\n      return ele.id === id;\n    });\n    console.log('newEditItem::: ', newEditItem);\n    setTogglesubmit(false);\n    setInputData(newEditItem.name);\n    setIsEdititem(id);\n  };\n  // const removeAll = () => {\n  //     setItems([]);\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //     <table border=\"1\">\n    //         <tr>\n    //             <td>id</td>\n    //             <td>name</td>\n    //             <td>username</td>\n    //             <td>email</td>\n    //         </tr>\n    //         {\n    //             data.map((item) =>\n    //                 <tr>\n    //                     <td>{ item.id }</td>\n    //                     <td>{ item.name }</td>\n    //                     <td>{ item.username }</td>\n    //                     <td>{ item.email }</td>\n    //                     <td><button onClick={ () => seleteUser(item.id) }>update</button></td>\n    //                     <td><button onClick={ () => deleteUser(item.id) }>delete</button></td>\n    //                 </tr>\n    //             )\n    //         }\n    //     </table>\n    //     <div>\n    //         <input type=\"text\" value={ name } onChange={ (e) => { setName(e.target.value) } } /> <br />\n    //         <input type=\"text\" value={ username } onChange={ (e) => { setUsername(e.target.value) } } /> <br />\n    //         <input type=\"text\" value={ email } onChange={ (e) => { setEmail(e.target.value) } } /> <br />\n    //         <button onClick={ updateUser }>update user</button>\n    //     </div>\n    // </>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: 5\n            },\n            children: \"My To Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputdata,\n            onChange: e => setInputData(e.target.value),\n            placeholder: \"Title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this), togglesubmit ? /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: addItem,\n            className: \"addBtn\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => editItem,\n            class: \"close\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"hello\",\n          children: items.map(ele => {\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [ele.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: \"90px\"\n                  },\n                  onClick: () => editItem(ele.id),\n                  class: \"close\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => deleteItem(ele.id),\n                  class: \"close\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, ele.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(Data, \"OiDLL6rp3VpIAzS/sYFg8li4azc=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","getlocalitems","list","localStorage","getItem","console","log","JSON","parse","Data","_s","inputdata","setInputData","items","setItems","togglesubmit","setTogglesubmit","isEdititem","setIsEdititem","addItem","alert","map","ele","id","name","allInputData","Date","getTime","toString","deleteItem","index","updateditems","filter","editItem","newEditItem","find","children","className","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","class","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/karan/OneDrive/Desktop/country/countrydata/data/src/component/datas/Data.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Data.css\";\r\n\r\n\r\nconst getlocalitems = () => {\r\n    let list = localStorage.getItem('lists')\r\n    console.log('list::: ', list);\r\n\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n\r\n}\r\n\r\nconst Data = () => {\r\n\r\n    // const [data, setData] = useState([]);\r\n    // const [name, setName] = useState(\"\");\r\n    // const [username, setUsername] = useState(\"\");\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [userId, setuserId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    //         .then(response => {\r\n    //             return response.json()\r\n    //         })\r\n    //         .then(data => {\r\n    //             setData(data)\r\n    //             setName(data[0].name)\r\n    //             setUsername(data[0].username)\r\n    //             setEmail(data[0].email)\r\n    //             setuserId(data[0].id)\r\n    //         })\r\n    // }, []);\r\n\r\n    // function deleteUser(id) {\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n    //         method: \"DELETE\"\r\n    //     }).then((response) => {\r\n    //         response.json()\r\n    //             .then((response) => {\r\n    //                 console.log(response);\r\n    //             })\r\n    //     })\r\n    // }\r\n\r\n    // function seleteUser(id) {\r\n    //     let item = data[id - 1];\r\n    //     setName(item.name);\r\n    //     setUsername(item.username);\r\n    //     setEmail(item.email);\r\n    //     setuserId(item.id);\r\n    // }\r\n\r\n    // function updateUser() {\r\n    //     let item = { name, username, email }\r\n    //     // console.log('item::: ', item);\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users/${userId}`, {\r\n    //         method: \"PUT\",\r\n    //         headers: {\r\n    //             'Accept': 'application/json',\r\n    //             'Content-type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify(item)\r\n    //     }).then((response) => {\r\n    //         response.json()\r\n    //             .then((response) => {\r\n    //                 console.log(response);\r\n    //             })\r\n    //     })\r\n    // }\r\n\r\n    const [inputdata, setInputData] = useState(\"\")\r\n    const [items, setItems] = useState(getlocalitems());\r\n    const [togglesubmit, setTogglesubmit] = useState(true);\r\n    const [isEdititem, setIsEdititem] = useState(null);\r\n\r\n    const addItem = () => {\r\n        if (!inputdata) {\r\n            alert(\"please fill the data\")\r\n        } else if (inputdata && !togglesubmit) {\r\n            setItems(\r\n                items.map((ele) => {\r\n                    if (ele.id === isEdititem) {\r\n                        return { ...ele, name: inputdata }\r\n                    }\r\n                    return ele;\r\n                })\r\n            )\r\n            setTogglesubmit(true)\r\n            setInputData(\"\")\r\n            setIsEdititem(null);\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputdata }\r\n            setItems([...items, allInputData])\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((ele) => {\r\n            return index != ele.id;\r\n        });\r\n        setItems(updateditems)\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((ele) => {\r\n            return ele.id === id\r\n        });\r\n        console.log('newEditItem::: ', newEditItem);\r\n\r\n        setTogglesubmit(false)\r\n        setInputData(newEditItem.name)\r\n        setIsEdititem(id);\r\n\r\n    }\r\n    // const removeAll = () => {\r\n    //     setItems([]);\r\n    // }\r\n\r\n    return (\r\n        // <>\r\n        //     <table border=\"1\">\r\n        //         <tr>\r\n        //             <td>id</td>\r\n        //             <td>name</td>\r\n        //             <td>username</td>\r\n        //             <td>email</td>\r\n        //         </tr>\r\n        //         {\r\n        //             data.map((item) =>\r\n        //                 <tr>\r\n        //                     <td>{ item.id }</td>\r\n        //                     <td>{ item.name }</td>\r\n        //                     <td>{ item.username }</td>\r\n        //                     <td>{ item.email }</td>\r\n        //                     <td><button onClick={ () => seleteUser(item.id) }>update</button></td>\r\n        //                     <td><button onClick={ () => deleteUser(item.id) }>delete</button></td>\r\n        //                 </tr>\r\n        //             )\r\n        //         }\r\n        //     </table>\r\n\r\n        //     <div>\r\n        //         <input type=\"text\" value={ name } onChange={ (e) => { setName(e.target.value) } } /> <br />\r\n        //         <input type=\"text\" value={ username } onChange={ (e) => { setUsername(e.target.value) } } /> <br />\r\n        //         <input type=\"text\" value={ email } onChange={ (e) => { setEmail(e.target.value) } } /> <br />\r\n        //         <button onClick={ updateUser }>update user</button>\r\n        //     </div>\r\n        // </>\r\n\r\n        <>\r\n            {/* <div className=\"todo-list\">\r\n                <h2>Todo List</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={ inputdata }\r\n                    onChange={ (e) => setInputData(e.target.value) }\r\n                    placeholder=\"Enter a new todo\"\r\n                />\r\n                <span><i onClick={ addItem } class='bx bxs-message-rounded-add' ></i></span>\r\n\r\n                <ul>\r\n                    {\r\n                        items.map((ele, index) => {\r\n                            return (\r\n\r\n                                <div key={ index }>\r\n                                    <span><h3>{ ele }</h3></span>\r\n                                    <i onClick={ () => deleteItem(index) } class='bx bxs-message-rounded-x' ></i>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className='allclear'>\r\n                    <button onClick={ removeAll }>all clear</button>\r\n                </div>\r\n            </div> */}\r\n\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h2 style={ { margin: 5 } }>My To Do List</h2>\r\n                    <input type=\"text\" value={ inputdata }\r\n                        onChange={ (e) => setInputData(e.target.value) } placeholder=\"Title...\" />\r\n                    {\r\n                        togglesubmit ? <span onClick={ addItem } className=\"addBtn\">Add</span> :\r\n                            <span onClick={ () => editItem } class=\"close\">Edit</span>\r\n                    }\r\n\r\n                </div>\r\n                <ul className='hello'>\r\n\r\n                    {\r\n                        items.map((ele) => {\r\n                            return (\r\n                                <ul key={ ele.id }>\r\n                                    <li>{ ele.name }\r\n                                        <span style={ { marginRight: \"90px\" } } onClick={ () => editItem(ele.id) } class=\"close\">Edit</span>\r\n                                        <span onClick={ () => deleteItem(ele.id) } class=\"close\">Remove</span>\r\n                                    </li>\r\n                                </ul>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Data"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}